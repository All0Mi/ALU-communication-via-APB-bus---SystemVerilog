/* Generated by Yosys 0.9 (git sha1 1979e0b) */

module register(clk, reset, in, out);
  wire [7:0] _00_;
  input clk;
  input [7:0] in;
  output [7:0] out;
  reg [7:0] out;
  input reset;
  assign _00_[0] = reset & in[0];
  assign _00_[1] = in[1] & reset;
  assign _00_[2] = in[2] & reset;
  assign _00_[3] = in[3] & reset;
  assign _00_[4] = in[4] & reset;
  assign _00_[5] = in[5] & reset;
  assign _00_[6] = in[6] & reset;
  assign _00_[7] = in[7] & reset;
  always @(posedge clk)
      out[0] <= _00_[0];
  always @(posedge clk)
      out[1] <= _00_[1];
  always @(posedge clk)
      out[2] <= _00_[2];
  always @(posedge clk)
      out[3] <= _00_[3];
  always @(posedge clk)
      out[4] <= _00_[4];
  always @(posedge clk)
      out[5] <= _00_[5];
  always @(posedge clk)
      out[6] <= _00_[6];
  always @(posedge clk)
      out[7] <= _00_[7];
endmodule
